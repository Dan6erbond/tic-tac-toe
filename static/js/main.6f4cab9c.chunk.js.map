{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","next","status","current","length","winner","calculateWinner","map","step","move","desc","jumpTo","handleClick","slice","setState","concat","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"4MAIA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAChBC,QAASF,EAAME,SACdF,EAAMG,O,IAKPC,E,qLACSC,GAAI,IAAD,OACd,OAAQ,kBAACN,EAAD,CACNI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAKpC,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GAxBTC,IAAMC,WA+BpBC,E,YACJ,WAAYX,GAAO,IAAD,8BAChB,4CAAMA,KACDY,MAAQ,CACXC,QAAS,CAAC,CACRN,QAASO,MAAM,GAAGC,KAAK,QAEzBC,KAAM,KANQ,E,sEAUR,IAcJC,EAdG,OACDJ,EAAUP,KAAKM,MAAMC,QACrBK,EAAUL,EAAQA,EAAQM,OAAS,GACnCC,EAASC,EAAgBH,EAAQX,SAEzBM,EAAQS,KAAI,SAACC,EAAMC,GAC/B,IAAMC,EAAOD,EAAI,uBAAmBA,GAAS,mBAC7C,OACE,4BACE,4BAAQtB,QAAS,kBAAM,EAAKwB,OAAOF,KAAQC,OAYjD,OALER,EADEG,EACI,kBAAcA,GAEd,uBAAmBd,KAAKM,MAAMI,MAIpC,yBAAKf,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACEG,QAASW,EAAQX,QACjBL,QAAW,SAACG,GAAD,OAAO,EAAKsB,YAAYtB,OAGvC,yBAAKJ,UAAU,aACb,6BAAMgB,GACN,iC,kCAMIZ,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAErBN,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQqB,QAC5BP,EAAgBd,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMI,KACxBV,KAAKuB,SAAS,CACZhB,QAASA,EAAQiB,OAAO,CAAC,CACvBvB,QAASA,KAEXS,KAAyB,KAAnBV,KAAKM,MAAMI,KAAc,IAAM,W,GA5DxBP,IAAMC,WAiEzB,SAASW,EAAgBd,GAWvB,IAVA,IAAMwB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA1B,EAAI,EAAGA,EAAI0B,EAAMZ,OAAQd,IAAK,CAAC,IAAD,cACnB0B,EAAM1B,GADa,GAC9B2B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI3B,EAAQyB,IAAMzB,EAAQyB,KAAOzB,EAAQ0B,IAAM1B,EAAQyB,KAAOzB,EAAQ2B,GACpE,OAAO3B,EAAQyB,GAGnB,OAAO,KAKTG,IAASC,OACP,kBAACzB,EAAD,MACA0B,SAASC,eAAe,U","file":"static/js/main.6f4cab9c.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props){\r\n  return (\r\n    <button className=\"square\"\r\n      onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  )\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (<Square\r\n      value={this.props.squares[i]}\r\n      onClick={() => this.props.onClick(i)}\r\n    />);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null)\r\n      }],\r\n      next: \"X\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[history.length - 1];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? `Go to move # ${move}` : \"Go to game start\";\r\n      return (\r\n        <li>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      )\r\n    })\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = `Winner: ${winner}`;\r\n    } else {\r\n      status = `Next player: ${this.state.next}`;\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick = {(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{/* TODO */}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleClick(i){\r\n    const history = this.state.history;\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]){\r\n      return;\r\n    }\r\n    squares[i] = this.state.next;\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares\r\n      }]),\r\n      next: this.state.next == \"X\" ? \"O\" : \"X\"\r\n    });\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}